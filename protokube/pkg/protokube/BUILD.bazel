load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "ali_volume.go",
        "aws_volume.go",
        "baremetal_volume.go",
        "channels.go",
        "do_volume.go",
        "etcd_cluster.go",
        "etcd_manifest.go",
        "gce_volume.go",
        "gossipdns.go",
        "helper.go",
        "kube_boot.go",
        "kube_boot_task.go",
        "kube_context.go",
        "kube_dns.go",
        "labeler.go",
        "models.go",
        "nsenter_exec.go",
        "openstack_volume.go",
        "rbac.go",
        "tainter.go",
        "utils.go",
        "volume_mounter.go",
        "volumes.go",
        "vsphere_volume.go",
    ],
    importpath = "k8s.io/kops/protokube/pkg/protokube",
    visibility = ["//visibility:public"],
    deps = [
        "//dns-controller/pkg/dns:go_default_library",
        "//pkg/k8scodecs:go_default_library",
        "//pkg/kubemanifest:go_default_library",
        "//pkg/resources/digitalocean:go_default_library",
        "//protokube/pkg/etcd:go_default_library",
        "//protokube/pkg/gossip:go_default_library",
        "//protokube/pkg/gossip/ali:go_default_library",
        "//protokube/pkg/gossip/aws:go_default_library",
        "//protokube/pkg/gossip/dns:go_default_library",
        "//protokube/pkg/gossip/gce:go_default_library",
        "//protokube/pkg/gossip/openstack:go_default_library",
        "//upup/pkg/fi/cloudup/aliup:go_default_library",
        "//upup/pkg/fi/cloudup/awsup:go_default_library",
        "//upup/pkg/fi/cloudup/gce:go_default_library",
        "//upup/pkg/fi/cloudup/openstack:go_default_library",
        "//upup/pkg/fi/cloudup/vsphere:go_default_library",
        "//util/pkg/exec:go_default_library",
        "//vendor/cloud.google.com/go/compute/metadata:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/ec2metadata:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/request:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/session:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/ec2:go_default_library",
        "//vendor/github.com/denverdino/aliyungo/common:go_default_library",
        "//vendor/github.com/denverdino/aliyungo/ecs:go_default_library",
        "//vendor/github.com/denverdino/aliyungo/metadata:go_default_library",
        "//vendor/github.com/digitalocean/godo:go_default_library",
        "//vendor/github.com/gophercloud/gophercloud/openstack/blockstorage/v2/volumes:go_default_library",
        "//vendor/github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/volumeattach:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/golang.org/x/oauth2/google:go_default_library",
        "//vendor/google.golang.org/api/compute/v0.beta:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/api/rbac/v1beta1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/errors:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/resource:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/labels:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/types:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/intstr:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/tools/clientcmd:go_default_library",
        "//vendor/k8s.io/klog:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/util/mount:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/volume/util/nsenter:go_default_library",
        "//vendor/k8s.io/utils/exec:go_default_library",
        "//vendor/k8s.io/utils/nsenter:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["volume_mounter_test.go"],
    embed = [":go_default_library"],
    deps = ["//protokube/pkg/etcd:go_default_library"],
)
